
  CREATE TABLE ADDRESSES
   (	ADDRESS_ID NUMBER(15,0) NOT NULL,
	ADDRESS1 VARCHAR2(40 BYTE) NOT NULL,
	ADDRESS2 VARCHAR2(40 BYTE),
	CITY VARCHAR2(40 BYTE) NOT NULL,
	POSTAL_CODE VARCHAR2(12 BYTE),
	STATE_PROVINCE VARCHAR2(40 BYTE) NOT NULL,
	COUNTRY_ID CHAR(2 BYTE) NOT NULL,
	LONGITUDE NUMBER,
	LATITUDE NUMBER,
	CREATED_BY VARCHAR2(60 BYTE) NOT NULL,
	CREATION_DATE DATE NOT NULL,
	LAST_UPDATED_BY VARCHAR2(60 BYTE) NOT NULL,
	LAST_UPDATE_DATE DATE NOT NULL,
	OBJECT_VERSION_ID NUMBER(15,0) NOT NULL,
	 CONSTRAINT ADDRESSES_PK PRIMARY KEY (ADDRESS_ID)
   );

--   COMMENT ON COLUMN ADDRESSES.ADDRESS_ID IS 'Unique identifier for an address';
--   COMMENT ON COLUMN ADDRESSES.ADDRESS1 IS 'First Line of the Address e.g. Street / Apartment number';
--   COMMENT ON COLUMN ADDRESSES.ADDRESS2 IS 'Second line of adress if required';
--   COMMENT ON COLUMN ADDRESSES.CITY IS 'Postal city or town';
--   COMMENT ON COLUMN ADDRESSES.STATE_PROVINCE IS 'If in the  US, this will be restricted to the US States, otherwise this will be free form.';
--   COMMENT ON COLUMN ADDRESSES.COUNTRY_ID IS 'ISO country code. See the COUNTRY_CODES table';
--   COMMENT ON COLUMN ADDRESSES.LONGITUDE IS 'Grid reference information for use in map mashups';
--   COMMENT ON COLUMN ADDRESSES.LATITUDE IS 'Grid reference information for use in map mashups';
--   COMMENT ON COLUMN ADDRESSES.CREATED_BY IS 'History column';
--   COMMENT ON COLUMN ADDRESSES.CREATION_DATE IS 'History column';
--   COMMENT ON COLUMN ADDRESSES.LAST_UPDATED_BY IS 'History column';
--   COMMENT ON COLUMN ADDRESSES.LAST_UPDATE_DATE IS 'History column';
--   COMMENT ON COLUMN ADDRESSES.OBJECT_VERSION_ID IS 'History column';
--   COMMENT ON TABLE ADDRESSES  IS 'The shared address table that is used to hold customer addresses, shipping addresses, warehouse addresses and so on. ';
--
--  CREATE OR REPLACE TRIGGER ASSIGN_ADDRESS_ID BEFORE INSERT ON ADDRESSES
--FOR EACH ROW
--BEGIN
-- IF :NEW.ADDRESS_ID IS NULL OR :NEW.ADDRESS_ID < 0 THEN
--   SELECT ADDRESS_SEQ.NEXTVAL
--     INTO :NEW.ADDRESS_ID
--     FROM DUAL;
--   END IF;
--END;
--/
--ALTER TRIGGER ASSIGN_ADDRESS_ID ENABLE;
--





  CREATE TABLE ADDRESS_USAGES
   (	ADDRESS_USAGES_ID NUMBER NOT NULL,
	ASSOCIATED_OWNER_ID NUMBER(15,0) NOT NULL,
	OWNER_TYPE_CODE VARCHAR2(30 BYTE) NOT NULL,
	ADDRESS_ID NUMBER(15,0) NOT NULL,
	USAGE_TYPE_CODE VARCHAR2(30 BYTE) NOT NULL,
	EXPIRED_FLAG VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL,
	CREATED_BY VARCHAR2(60 BYTE) NOT NULL,
	CREATION_DATE DATE NOT NULL,
	LAST_UPDATED_BY VARCHAR2(60 BYTE) NOT NULL,
	LAST_UPDATE_DATE DATE NOT NULL,
	OBJECT_VERSION_ID NUMBER(15,0) NOT NULL,
	 CONSTRAINT ADDRESS_USAGES_PK PRIMARY KEY (ADDRESS_USAGES_ID),
--  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
--  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
--  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
--  TABLESPACE USERS ,
	 CONSTRAINT ADDRESS_USAGES_CHK_EXPIRED CHECK (EXPIRED_FLAG in ('Y','N')),
	 CONSTRAINT ADDRESS_USAGES_ADDRESSES_FK FOREIGN KEY (ADDRESS_ID)
	  REFERENCES ADDRESSES (ADDRESS_ID)
--	 CONSTRAINT ADDRESS_USAGES_PERSONS_FK FOREIGN KEY (ASSOCIATED_OWNER_ID)
--	  REFERENCES PERSONS (PERSON_ID) ENABLE
   ) ;

--   COMMENT ON COLUMN ADDRESS_USAGES.ASSOCIATED_OWNER_ID IS 'The ID of the associated Customer or Supplier';
--   COMMENT ON COLUMN ADDRESS_USAGES.OWNER_TYPE_CODE IS 'Links the address usage to either a Customer or a Supplier. References LOOKUP_CODES with the domain OWNER_TYPE_CODE';
--   COMMENT ON COLUMN ADDRESS_USAGES.ADDRESS_ID IS 'Unique Id of the mapped address';
--   COMMENT ON COLUMN ADDRESS_USAGES.USAGE_TYPE_CODE IS 'Distinguish between shipping, postal and invoice addresses.References LOOKUP_CODES with the domain USAGE_TYPE_CODE';
--   COMMENT ON COLUMN ADDRESS_USAGES.EXPIRED_FLAG IS 'Boolean to indicate if this address mapping is still valid';
--   COMMENT ON COLUMN ADDRESS_USAGES.CREATED_BY IS 'History column';
--   COMMENT ON COLUMN ADDRESS_USAGES.CREATION_DATE IS 'History column';
--   COMMENT ON COLUMN ADDRESS_USAGES.LAST_UPDATED_BY IS 'History column';
--   COMMENT ON COLUMN ADDRESS_USAGES.LAST_UPDATE_DATE IS 'History column';
--   COMMENT ON COLUMN ADDRESS_USAGES.OBJECT_VERSION_ID IS 'History column';
--   COMMENT ON TABLE ADDRESS_USAGES  IS 'Intersection entity that maps addresses to customers, suppliers etc. Any entity that can have multiple addresses will map them through this table. Certain address references such as a Customer''s primary address are also de-normalised into the relevant table. Where a consumer has one and only one address it will have a direct reference to the address table and will not have an entry here (for example Warehouse)';
--
--  CREATE OR REPLACE TRIGGER ASSIGN_ADDRESS_USAGES_ID BEFORE INSERT ON ADDRESS_USAGES
--FOR EACH ROW
--BEGIN
-- IF :NEW.ADDRESS_USAGES_ID IS NULL OR :NEW.ADDRESS_USAGES_ID < 0 THEN
--   SELECT ADDRESS_USAGES_SEQ.NEXTVAL
--     INTO :NEW.ADDRESS_USAGES_ID
--     FROM DUAL;
--   END IF;
--END;
--/
--ALTER TRIGGER ASSIGN_ADDRESS_USAGES_ID ENABLE;

