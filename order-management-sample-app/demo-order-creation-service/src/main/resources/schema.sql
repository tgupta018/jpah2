
  CREATE TABLE ORDERS
   (ORDER_ID NUMBER(15,0) NOT NULL ,
	ORDER_DATE DATE NOT NULL ,
	ORDER_SHIPPED_DATE DATE,
	ORDER_STATUS_CODE VARCHAR2(30 BYTE) NOT NULL ,
	ORDER_TOTAL NUMBER(8,2) NOT NULL ,
	CUSTOMER_ID NUMBER(15,0) NOT NULL ,
	SHIP_TO_NAME VARCHAR2(120 BYTE),
	SHIP_TO_ADDRESS_ID NUMBER(15,0) NOT NULL ,
	SHIP_TO_PHONE_NUMBER VARCHAR2(20 BYTE),
	SHIPPING_OPTION_ID NUMBER(15,0) NOT NULL ,
	PAYMENT_OPTION_ID NUMBER(16,0),
	DISCOUNT_ID NUMBER(15,0),
	COUPON_ID NUMBER(15,0),
	FREE_SHIPPING_FLAG VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL ,
	CUSTOMER_COLLECT_FLAG VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL ,
	COLLECTION_WAREHOUSE_ID NUMBER(15,0),
	GIFTWRAP_FLAG VARCHAR2(1 BYTE) DEFAULT 'N' NOT NULL ,
	GIFTWRAP_MESSAGE VARCHAR2(2000 BYTE),
	CREATED_BY VARCHAR2(60 BYTE) NOT NULL ,
	CREATION_DATE DATE NOT NULL ,
	LAST_UPDATED_BY VARCHAR2(60 BYTE) NOT NULL ,
	LAST_UPDATE_DATE DATE NOT NULL ,
	OBJECT_VERSION_ID NUMBER(15,0) NOT NULL ,
	 CONSTRAINT ORDERS_PK PRIMARY KEY (ORDER_ID)

--	 CONSTRAINT ORDERS_PAYMENT_OPTIONS_FK FOREIGN KEY (PAYMENT_OPTION_ID)
--	  REFERENCES PAYMENT_OPTIONS (PAYMENT_OPTION_ID) ,
--	 CONSTRAINT ORDERS_SHIPPING_OPTIONS_FK FOREIGN KEY (SHIPPING_OPTION_ID)
--	  REFERENCES SHIPPING_OPTIONS_BASE (SHIPPING_OPTION_ID) ,
--	 CONSTRAINT ORDERS_DISCOUNTS_FK FOREIGN KEY (DISCOUNT_ID)
--	  REFERENCES DISCOUNTS_BASE (DISCOUNT_ID) ,
--	 CONSTRAINT ORDERS_DISCOUNTS_FK1 FOREIGN KEY (COUPON_ID)
--	  REFERENCES DISCOUNTS_BASE (DISCOUNT_ID) ,
--	 CONSTRAINT ORDERS_WAREHOUSES_FK FOREIGN KEY (COLLECTION_WAREHOUSE_ID)
--	  REFERENCES WAREHOUSES (WAREHOUSE_ID) ,
--	 CONSTRAINT ORDERS_ADDRESSES_FK FOREIGN KEY (SHIP_TO_ADDRESS_ID)
--	  REFERENCES ADDRESSES (ADDRESS_ID) ,
--	 CONSTRAINT ORDERS_PERSONS_FK FOREIGN KEY (CUSTOMER_ID)
--	  REFERENCES PERSONS (PERSON_ID) ENABLE
   ) ;

--   COMMENT ON COLUMN ORDERS.ORDER_ID IS 'Unique identifier for an order';
--   COMMENT ON COLUMN ORDERS.ORDER_DATE IS 'Date on which the order was placed';
--   COMMENT ON COLUMN ORDERS.ORDER_SHIPPED_DATE IS 'Date on which the order was shipped. Note that the system does not provide for splitting orders into muliple parts for shipping purposes. Well we never said it was real!';
--   COMMENT ON COLUMN ORDERS.ORDER_STATUS_CODE IS 'What status the order is currently in. Links to the LOOKUP_CODES table using the domain ORDER_STATUS_CODE ';
--   COMMENT ON COLUMN ORDERS.ORDER_TOTAL IS 'The calculated total for the order based on the products (and quantity) ordered. This value does not include shipping costs.';
--   COMMENT ON COLUMN ORDERS.CUSTOMER_ID IS 'Link to the customer placing the order';
--   COMMENT ON COLUMN ORDERS.SHIP_TO_NAME IS 'The name to address this package to. If null then the name will be constructed from the Customer record';
--   COMMENT ON COLUMN ORDERS.SHIP_TO_ADDRESS_ID IS 'Direct reference to the shipping address. The UI will generally default this to the primary address of the customer.';
--   COMMENT ON COLUMN ORDERS.SHIP_TO_PHONE_NUMBER IS 'Contact phone number for the delivery guy. If null, the phone number of the Customer will be used';
--   COMMENT ON COLUMN ORDERS.SHIPPING_OPTION_ID IS 'How should this order be shipped';
--   COMMENT ON COLUMN ORDERS.PAYMENT_OPTION_ID IS 'What form of payment will be used';
--   COMMENT ON COLUMN ORDERS.DISCOUNT_ID IS 'If the customer has a membership of some sort this will link to the discount level provided by that membership';
--   COMMENT ON COLUMN ORDERS.COUPON_ID IS 'link to a one-off coupon used with this order';
--   COMMENT ON COLUMN ORDERS.FREE_SHIPPING_FLAG IS 'Boolean flag to indicate if shipping costs for basic shipping will be deducted. This flag only takes effect when the FREE_SHIPPING_ALLOWED_FLAG flag is set in the selected Shipping option';
--   COMMENT ON COLUMN ORDERS.CUSTOMER_COLLECT_FLAG IS 'Indicates if this order will be collected from a warehouse rather than being shipped';
--   COMMENT ON COLUMN ORDERS.COLLECTION_WAREHOUSE_ID IS 'If the CUSTOMER_COLLECT_FLAG is set, this column will hold the warehouse that the customer will elect to collect from ';
--   COMMENT ON COLUMN ORDERS.GIFTWRAP_FLAG IS 'Boolean Y/N';
--   COMMENT ON COLUMN ORDERS.GIFTWRAP_MESSAGE IS 'Message to be printed and included in a Giftwrapped order.';
--   COMMENT ON COLUMN ORDERS.CREATED_BY IS 'History column';
--   COMMENT ON COLUMN ORDERS.CREATION_DATE IS 'History column';
--   COMMENT ON COLUMN ORDERS.LAST_UPDATED_BY IS 'History column';
--   COMMENT ON COLUMN ORDERS.LAST_UPDATE_DATE IS 'History column';
--   COMMENT ON COLUMN ORDERS.OBJECT_VERSION_ID IS 'History column';
--   COMMENT ON TABLE ORDERS  IS 'Orders holds the core order information';
--
--  CREATE OR REPLACE TRIGGER ASSIGN_ORDER_ID BEFORE INSERT ON ORDERS
--FOR EACH ROW
--BEGIN
-- IF :NEW.ORDER_ID IS NULL OR :NEW.ORDER_ID < 0 THEN
--   SELECT ORDER_SEQ.NEXTVAL
--     INTO :NEW.ORDER_ID
--     FROM DUAL;
--   END IF;
--END;
--/
--ALTER TRIGGER ASSIGN_ORDER_ID ENABLE;





  CREATE TABLE ORDER_ITEMS
   (	ORDER_ID NUMBER(15,0) NOT NULL,
	LINE_ITEM_ID NUMBER(15,0) NOT NULL,
	PRODUCT_ID NUMBER(15,0) NOT NULL,
	QUANTITY NUMBER(6,0) DEFAULT 1 NOT NULL,
	UNIT_PRICE NUMBER(8,2) NOT NULL,
	CREATED_BY VARCHAR2(60 BYTE) NOT NULL,
	CREATION_DATE DATE NOT NULL,
	LAST_UPDATED_BY VARCHAR2(60 BYTE) NOT NULL,
	LAST_UPDATE_DATE DATE NOT NULL,
	OBJECT_VERSION_ID NUMBER(15,0) NOT NULL,
	 CONSTRAINT ORDER_ITEMS_PK PRIMARY KEY (ORDER_ID, LINE_ITEM_ID),

--	 CONSTRAINT ORDER_ITEMS_PRODUCTS_FK FOREIGN KEY (PRODUCT_ID)
--	  REFERENCES FOD.PRODUCTS_BASE (PRODUCT_ID),
	 CONSTRAINT ORDER_ITEMS_ORDERS_FK FOREIGN KEY (ORDER_ID)
	  REFERENCES ORDERS (ORDER_ID)
   ) ;

--   COMMENT ON COLUMN FOD.ORDER_ITEMS.ORDER_ID IS 'ID of the associated Order';
--   COMMENT ON COLUMN FOD.ORDER_ITEMS.LINE_ITEM_ID IS 'Line number of this item';
--   COMMENT ON COLUMN FOD.ORDER_ITEMS.PRODUCT_ID IS 'Product being purchased';
--   COMMENT ON COLUMN FOD.ORDER_ITEMS.QUANTITY IS 'Number of units of this product in the purchase';
--   COMMENT ON COLUMN FOD.ORDER_ITEMS.UNIT_PRICE IS 'Price per unit';
--   COMMENT ON COLUMN FOD.ORDER_ITEMS.CREATED_BY IS 'History column';
--   COMMENT ON COLUMN FOD.ORDER_ITEMS.CREATION_DATE IS 'History column';
--   COMMENT ON COLUMN FOD.ORDER_ITEMS.LAST_UPDATED_BY IS 'History column';
--   COMMENT ON COLUMN FOD.ORDER_ITEMS.LAST_UPDATE_DATE IS 'History column';
--   COMMENT ON COLUMN FOD.ORDER_ITEMS.OBJECT_VERSION_ID IS 'History column';
--   COMMENT ON TABLE FOD.ORDER_ITEMS  IS 'Holds the order lines';
--
--  CREATE INDEX FOD.INDEX_ORDER_ITEMS_ORDID_PRODID ON FOD.ORDER_ITEMS (ORDER_ID, PRODUCT_ID)
--  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
--  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
--  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
--  TABLESPACE USERS ;
--
--  CREATE INDEX FOD.INDEX_ORDER_ITEMS_PRODID ON FOD.ORDER_ITEMS (PRODUCT_ID)
--  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS
--  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
--  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
--  TABLESPACE USERS ;
--
--  CREATE OR REPLACE TRIGGER FOD.ASSIGN_LINE_ITEM_ID BEFORE INSERT ON ORDER_ITEMS
--FOR EACH ROW
--BEGIN
-- IF :NEW.LINE_ITEM_ID IS NULL OR :NEW.LINE_ITEM_ID < 0 THEN
--   SELECT ORDER_ITEMS_SEQ.NEXTVAL
--     INTO :NEW.LINE_ITEM_ID
--     FROM DUAL;
--   END IF;
--END;
--/
--ALTER TRIGGER FOD.ASSIGN_LINE_ITEM_ID ENABLE;

